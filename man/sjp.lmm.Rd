% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/sjPlotLinregMultiple.R
\name{sjp.lmm}
\alias{sjp.lmm}
\title{Plot beta coefficients of multiple fitted lm's}
\usage{
sjp.lmm(..., title = NULL, labelDependentVariables = NULL,
  legendDepVarTitle = "Dependent Variables", legendPValTitle = "p-level",
  stringModel = "Model", axisLabels.y = NULL, axisTitle.x = "Estimates",
  axisLimits = NULL, breakTitleAt = 50, breakLabelsAt = 25,
  breakLegendAt = 20, gridBreaksAt = NULL, geom.size = 3,
  geom.spacing = 0.4, geom.colors = "Dark2", nsAlpha = 1,
  usePShapes = FALSE, interceptLineType = 2,
  interceptLineColor = "grey70", coord.flip = TRUE, showIntercept = FALSE,
  showAxisLabels.y = TRUE, showValueLabels = TRUE, labelDigits = 2,
  showPValueLabels = TRUE, hideLegend = FALSE, facet.grid = FALSE,
  printPlot = TRUE)
}
\arguments{
\item{...}{One or more fitted lm-objects. May also be a \code{\link{list}}-object with
fitted models, instead of separating each model with comma. See examples.}

\item{title}{Diagram's title as string.
Example: \code{title=c("my title")}}

\item{labelDependentVariables}{Labels of the dependent variables of all fitted models
which have been used as first parameter(s), provided as char vector.}

\item{legendDepVarTitle}{A character vector used for the title of the dependent variable's legend.
Default is \code{"Dependent Variables"}.}

\item{legendPValTitle}{A character vector used for the title of the significance level's legend.
Default is \code{"p-level"}. Only applies if \code{usePShapes} is \code{TRUE}.}

\item{stringModel}{String constant used as legend text for the model names in case no
labels for the dependent variables are provided (see \code{labelDependentVariables}).
Default is \code{"Model"}.}

\item{axisLabels.y}{Labels of the predictor variables (independent vars, betas) that are used for labelling the
axis. Passed as vector of strings.
Example: \code{axisLabels.y=c("Label1", "Label2", "Label3")}
Note: If you use the \code{\link[sjmisc]{read_spss}} function and the \code{\link[sjmisc]{get_val_labels}} function, you receive a
\code{list} object with label strings. The labels may also be passed as list object. They will be coerced
to character vector automatically.}

\item{axisTitle.x}{A label ("title") for the x axis.}

\item{axisLimits}{Defines the range of the axis where the beta coefficients and their confidence intervalls
are drawn. By default, the limits range from the lowest confidence interval to the highest one, so
the diagram has maximum zoom. Use your own values as 2-value-vector, for instance: \code{limits=c(-0.8,0.8)}.}

\item{breakTitleAt}{Wordwrap for diagram title. Determines how many chars of the title are displayed in
one line and when a line break is inserted into the title}

\item{breakLabelsAt}{Wordwrap for diagram labels. Determines how many chars of the category labels are displayed in
one line and when a line break is inserted}

\item{breakLegendAt}{Wordwrap for legend, i.e. names of the dependent variables of each fitted model.
See parameter \code{labelDependentVariables}. Determines how many chars of each dependent variable name
is displayed in one line in the legend and when a line break is inserted}

\item{gridBreaksAt}{Sets the breaks on the y axis, i.e. at every n'th position a major
grid is being printed. Default is \code{NULL}, so \code{\link{pretty}} gridbeaks will be used.}

\item{geom.size}{The size of the points that indicate the estimates. Default is 3.}

\item{geom.spacing}{Defines the space between the dots and error bars of the plotted fitted models. Default
is 0.3.}

\item{geom.colors}{A vector with colors for representing the estimates (i.e. points and error bars)
of the different fitted models. Thus, the length of this vector must be equal to
the length of supplied fitted models, so each model is represented by its own color.
You can use:
\itemize{
  \item If not specified, the qualitative \code{"Dark2"} color brewer palette will be used.
  \item If \code{"gs"}, a greyscale will be used.
  \item If \code{geom.colors} is any valid color brewer palette name, the related \href{http://colorbrewer2.org}{color brewer} palette will be used. Use \code{display.brewer.all()} from the \code{RColorBrewer} package to view all available palette names.
  }
Else specify your own color values as vector (e.g. \code{geom.colors=c("#f00000", "#00ff00", "#0080ff")}).}

\item{nsAlpha}{The alpha level (transparancy) of non significant predicors. Points and error bars
are affected by this value and plotted with a slight transparancy. Default is 1.}

\item{usePShapes}{If \code{TRUE}, significant levels are distinguished by different point shapes and a related
legend is plotted. Default is \code{FALSE}.}

\item{interceptLineType}{The linetype of the intercept line (zero point). Default is \code{2} (dashed line).}

\item{interceptLineColor}{The color of the intercept line. Default value is \code{"grey70"}.}

\item{coord.flip}{If \code{TRUE} (default), predictors are plotted on the left y-axis and estimate
values are plotted on the x-axis.}

\item{showIntercept}{If \code{TRUE}, the intercept of the fitted model is also plotted.
Default is \code{FALSE}.}

\item{showAxisLabels.y}{Whether beta names (predictor labels) should be shown or not.}

\item{showValueLabels}{Whether the beta value labels should be plotted.}

\item{labelDigits}{The amount of digits for rounding the estimations (see \code{showValueLabels}).
Default is 2, i.e. estimators have 2 digits after decimal point.}

\item{showPValueLabels}{Whether the significance levels of each coefficient should be appended
to values or not.}

\item{hideLegend}{Indicates whether legend (guide) should be shown or not.}

\item{facet.grid}{\code{TRUE} when each model should be plotted as single facet instead of
an integrated single graph.}

\item{printPlot}{If \code{TRUE} (default), plots the results as graph. Use \code{FALSE} if you don't
want to plot any graphs. In either case, the ggplot-object will be returned as value.}
}
\value{
(Insisibily) returns the ggplot-object with the complete plot (\code{plot}) as well as the data frame that
          was used for setting up the ggplot-object (\code{df}).
}
\description{
Plot beta coefficients (estimates) with confidence intervalls of multiple fitted linear models
               in one plot.
}
\examples{
# prepare dummy variables for binary logistic regression
# Now fit the models. Note that all models share the same predictors
# and only differ in their dependent variable
library(sjmisc)
data(efc)

# fit three models
fit1 <- lm(barthtot ~ c160age + c12hour + c161sex + c172code, data = efc)
fit2 <- lm(neg_c_7 ~ c160age + c12hour + c161sex + c172code, data = efc)
fit3 <- lm(tot_sc_e ~ c160age + c12hour + c161sex + c172code, data = efc)

# plot multiple models
sjp.lmm(fit1, fit2, fit3, facet.grid = TRUE)

# plot multiple models with legend labels and point shapes instead of value  labels
sjp.lmm(fit1, fit2, fit3,
         axisLabels.y = c("Carer's Age",
                          "Hours of Care",
                          "Carer's Sex",
                          "Educational Status"),
         labelDependentVariables = c("Barthel Index",
                                     "Negative Impact",
                                     "Services used"),
         showValueLabels = FALSE,
         showPValueLabels = FALSE,
         usePShapes = TRUE,
         nsAlpha = 0.3)

# plot multiple models from nested lists parameter
all.models <- list()
all.models[[1]] <- fit1
all.models[[2]] <- fit2
all.models[[3]] <- fit3

sjp.lmm(all.models)
}

